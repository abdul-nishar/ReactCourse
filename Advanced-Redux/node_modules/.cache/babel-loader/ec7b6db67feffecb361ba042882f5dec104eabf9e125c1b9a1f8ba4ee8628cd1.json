{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    addToCart(state, action) {\n      const index = state.cartItems.findIndex(item => item.id === action.payload.id);\n      if (index === -1) state.cartItems.push(action.payload);else state.cartItems[index].quantity++;\n    },\n    increaseQuantity(state, action) {\n      const index = state.cartItems.findIndex(item => item.id === action.payload.id);\n      state.cartItems[index].quantity++;\n    },\n    decreaseQuantity(state, action) {\n      const index = state.cartItems.findIndex(item => item.id === action.payload.id);\n      if (state.cartItems[index].quantity <= 1) {\n        state.cartItems.splice(index, 1);\n      } else state.cartItems[index].quantity--;\n    }\n  }\n});\nconst userInterfaceSlice = createSlice({\n  name: \"interface\",\n  initialState: {\n    isVisible: false,\n    notification: null\n  },\n  reducers: {\n    toggleCart(state) {\n      state.isVisible = !state.isVisible;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(userActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data...\"\n    }));\n    const fetchingData = async () => {\n      await fetch(\"https://website-development-64082-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n    };\n    try {\n      await fetchingData();\n      dispatch(userActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Cart data fetched successfully\"\n      }));\n    } catch (error) {\n      dispatch(userActions.showNotification({\n        status: \"error\",\n        title: \"Error ðŸ”´\",\n        message: \"Sending cart data failed\"\n      }));\n    }\n  };\n};\nconst store = configureStore({\n  reducer: {\n    cart: cartSlice.reducer,\n    user: userInterfaceSlice.reducer\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport const userActions = userInterfaceSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","createSlice","cartSlice","name","initialState","cartItems","reducers","addToCart","state","action","index","findIndex","item","id","payload","push","quantity","increaseQuantity","decreaseQuantity","splice","userInterfaceSlice","isVisible","notification","toggleCart","showNotification","status","title","message","sendCartData","cart","dispatch","userActions","fetchingData","fetch","method","body","JSON","stringify","error","store","reducer","user","cartActions","actions"],"sources":["/Users/abdulnisar/Downloads/Skills/Web Development/ReactCourse/ReactPractice/Advanced-Redux/src/store/index.js"],"sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: { cartItems: [] },\n  reducers: {\n    addToCart(state, action) {\n      const index = state.cartItems.findIndex(\n        (item) => item.id === action.payload.id\n      );\n\n      if (index === -1) state.cartItems.push(action.payload);\n      else state.cartItems[index].quantity++;\n    },\n\n    increaseQuantity(state, action) {\n      const index = state.cartItems.findIndex(\n        (item) => item.id === action.payload.id\n      );\n\n      state.cartItems[index].quantity++;\n    },\n\n    decreaseQuantity(state, action) {\n      const index = state.cartItems.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (state.cartItems[index].quantity <= 1) {\n        state.cartItems.splice(index, 1);\n      } else state.cartItems[index].quantity--;\n    },\n  },\n});\n\nconst userInterfaceSlice = createSlice({\n  name: \"interface\",\n  initialState: { isVisible: false, notification: null },\n  reducers: {\n    toggleCart(state) {\n      state.isVisible = !state.isVisible;\n    },\n\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n  },\n});\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      userActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data...\",\n      })\n    );\n\n    const fetchingData = async () => {\n      await fetch(\n        \"https://website-development-64082-default-rtdb.firebaseio.com/cart.json\",\n        { method: \"PUT\", body: JSON.stringify(cart) }\n      );\n    };\n\n    try {\n      await fetchingData();\n      dispatch(\n        userActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Cart data fetched successfully\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        userActions.showNotification({\n          status: \"error\",\n          title: \"Error ðŸ”´\",\n          message: \"Sending cart data failed\",\n        })\n      );\n    }\n  };\n};\n\nconst store = configureStore({\n  reducer: { cart: cartSlice.reducer, user: userInterfaceSlice.reducer },\n});\n\nexport const cartActions = cartSlice.actions;\nexport const userActions = userInterfaceSlice.actions;\n\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}