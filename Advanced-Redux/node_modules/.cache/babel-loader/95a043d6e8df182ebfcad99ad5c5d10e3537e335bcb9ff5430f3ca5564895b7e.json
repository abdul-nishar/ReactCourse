{"ast":null,"code":"var _jsxFileName = \"/Users/abdulnisar/Downloads/Skills/Web Development/ReactCourse/ReactPractice/Advanced-Redux/src/App.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { userActions } from \"./store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const cartState = useSelector(state => state.user.isVisible);\n  const cart = useSelector(state => state.cart.cartItems);\n  useEffect(() => {\n    const updatingCart = async () => {\n      dispatch(userActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data...\"\n      }));\n      const response = await fetch(\"https://website-development-64082-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error();\n      }\n      dispatch(userActions.showNotification({\n        status: \"success\",\n        title: \"Cart Data Fetched\",\n        message: \"Cart data fetched successfully\"\n      }));\n    };\n    updatingCart().catch(err => {\n      dispatch(userActions.showNotification({\n        status: \"error\",\n        title: \"Error in fetching cart\",\n        message: \"Sending cart data failed\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: cartState ? /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 42\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"vhWVHWOEjmuFwKMl4n+K8JnWIGI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useDispatch","useSelector","useEffect","Cart","Layout","Products","userActions","jsxDEV","_jsxDEV","App","_s","dispatch","cartState","state","user","isVisible","cart","cartItems","updatingCart","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abdulnisar/Downloads/Skills/Web Development/ReactCourse/ReactPractice/Advanced-Redux/src/App.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { userActions } from \"./store/index\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const cartState = useSelector((state) => state.user.isVisible);\n  const cart = useSelector((state) => state.cart.cartItems);\n\n  useEffect(() => {\n    const updatingCart = async () => {\n      dispatch(\n        userActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data...\",\n        })\n      );\n\n      const response = await fetch(\n        \"https://website-development-64082-default-rtdb.firebaseio.com/cart.json\",\n        { method: \"PUT\", body: JSON.stringify(cart) }\n      );\n\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      dispatch(\n        userActions.showNotification({\n          status: \"success\",\n          title: \"Cart Data Fetched\",\n          message: \"Cart data fetched successfully\",\n        })\n      );\n    };\n\n    updatingCart().catch((err) => {\n      dispatch(\n        userActions.showNotification({\n          status: \"error\",\n          title: \"Error in fetching cart\",\n          message: \"Sending cart data failed\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return <Layout>{cartState ? <Cart /> : <Products />}</Layout>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,OAAO;AAEjC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,SAAS,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,SAAS,CAAC;EAC9D,MAAMC,IAAI,GAAGf,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACG,IAAI,CAACC,SAAS,CAAC;EAEzDf,SAAS,CAAC,MAAM;IACd,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/BP,QAAQ,CACNL,WAAW,CAACa,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;MAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yEAAyE,EACzE;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAAE,CAC9C,CAAC;MAED,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,CAAC;MACnB;MAEAnB,QAAQ,CACNL,WAAW,CAACa,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,mBAAmB;QAC1BC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC;IAEDJ,YAAY,CAAC,CAAC,CAACa,KAAK,CAAEC,GAAG,IAAK;MAC5BrB,QAAQ,CACNL,WAAW,CAACa,gBAAgB,CAAC;QAC3BC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,wBAAwB;QAC/BC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,IAAI,EAAEL,QAAQ,CAAC,CAAC;EAEpB,oBAAOH,OAAA,CAACJ,MAAM;IAAA6B,QAAA,EAAErB,SAAS,gBAAGJ,OAAA,CAACL,IAAI;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG7B,OAAA,CAACH,QAAQ;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAC/D;AAAC3B,EAAA,CA7CQD,GAAG;EAAA,QACOT,WAAW,EACVC,WAAW,EAChBA,WAAW;AAAA;AAAAqC,EAAA,GAHjB7B,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}